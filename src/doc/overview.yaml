project:
  name: "@akaoio/stacker"
  version: "2.0.0"
  license: "MIT"
  author: "AKAO.IO"
  repository: "https://github.com/akaoio/stacker"
  description: "Universal POSIX shell framework for system management - The foundational framework that standardizes patterns across all technologies with modular architecture"
  philosophy: "Stacker brings order to chaos - a universal shell framework with modular loading that works everywhere, forever."

core_principles:
  - title: "Universal POSIX Compliance"
    description: "Pure POSIX shell implementation that runs on any Unix-like system without dependencies"
    critical: true
  
  - title: "Framework Pattern Standardization"
    description: "Establishes universal patterns for shell-based system management across all environments"
    critical: true
  
  - title: "Zero Dependencies"
    description: "No external dependencies, no runtimes, no package managers - just pure shell"
    critical: true
  
  - title: "Eternal Infrastructure"
    description: "Built to last forever - when languages come and go, Stacker remains"
    critical: true

architecture:
  overview: "Stacker is a comprehensive shell framework that provides standardized patterns for system management, configuration, installation, updates, and service orchestration. Version 2.0.0 features a complete CLI interface with interactive commands and comprehensive help system."
  
  components:
    - name: "Core Module (stacker-core.sh)"
      description: "Central framework providing common functions, error handling, logging, and state management"
      responsibility: "Foundation layer for all Stacker operations"
    
    - name: "Configuration Module (stacker-config.sh)"
      description: "XDG-compliant configuration management with JSON support and environment variable overrides"
      responsibility: "Centralized configuration handling across all modules"
    
    - name: "Installation Module (stacker-install.sh)"
      description: "Universal installation framework supporting systemd, cron, and manual deployment"
      responsibility: "Standardized installation across different environments"
    
    - name: "Update Module (stacker-update.sh)"
      description: "Intelligent update system with version management and rollback capabilities"
      responsibility: "Safe and reliable system updates"
    
    - name: "Service Module (stacker-service.sh)"
      description: "Service lifecycle management for systemd, init.d, and standalone daemons"
      responsibility: "Unified service control interface"
    
    - name: "CLI Interface (integrated)"
      description: "Complete command-line interface with interactive commands, argument parsing, and comprehensive help system"
      responsibility: "Direct CLI execution, user interaction, and command processing with full subcommand support"
    
    - name: "Self-Update Module (stacker-self-update.sh)"
      description: "Auto-update capability with integrity verification and atomic updates"
      responsibility: "Framework self-maintenance"

features:
  - name: "Universal Shell Patterns"
    description: "Standardized patterns for error handling, logging, configuration, and state management"
  
  - name: "Dynamic Module Loading"
    description: "On-demand module loading with automatic dependency resolution and smart caching"
  
  - name: "Modular Architecture"
    description: "Clean separation of concerns with independent, reusable modules that load only when needed"
  
  - name: "Module Registry System"
    description: "Comprehensive module tracking, dependency management, and initialization lifecycle"
  
  - name: "Auto-Loading Intelligence"
    description: "Smart function detection that automatically loads required modules based on function calls"
  
  - name: "Interactive CLI Interface"
    description: "Complete command-line interface with interactive mode, comprehensive help system, short aliases, and intelligent argument parsing"
  
  - name: "XDG Compliance"
    description: "Full XDG Base Directory specification compliance for configuration and data storage"
  
  - name: "Multi-Platform Support"
    description: "Works on Linux, BSD, macOS, and any POSIX-compliant system"
  
  - name: "Service Integration"
    description: "Native integration with systemd, init.d, launchd, and cron"
  
  - name: "Atomic Operations"
    description: "Safe atomic updates and rollback capabilities for critical operations"
  
  - name: "Version Management"
    description: "Semantic versioning with compatibility checking and migration support"
  
  - name: "Health Monitoring"
    description: "Built-in health checks and diagnostic capabilities"

use_cases:
  - "System initialization and bootstrapping"
  - "Application deployment and management"
  - "Service orchestration and monitoring"
  - "Configuration management across environments"
  - "Automated updates and maintenance"
  - "Cross-platform shell script development"
  - "Infrastructure automation without dependencies"
  - "Emergency recovery systems"

why_stacker:
  title: "Why Stacker Matters"
  description: "Stacker is the foundational framework that brings consistency and reliability to shell-based system management. While modern tools require complex dependencies and runtimes, Stacker provides a universal, dependency-free solution that works everywhere, forever."
  
  benefits:
    - "No dependencies means no dependency hell"
    - "POSIX compliance ensures universal compatibility"
    - "Standardized patterns reduce complexity and errors"
    - "Framework approach enables rapid development"
    - "Battle-tested reliability for production systems"
    - "Emergency recovery when other systems fail"
    - "Educational resource for shell best practices"